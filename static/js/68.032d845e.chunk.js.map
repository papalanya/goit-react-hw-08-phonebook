{"version":3,"file":"static/js/68.032d845e.chunk.js","mappings":"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","sources":["Redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactListItem/ContactListItem.styled.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/Contacts/Contacts.styled.js","Pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n\n    return visibleContacts;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n  label {\n    display: block;\n    margin-bottom: 5px;\n    font-size: 20px;\n  }\n  TextField {\n    width: 250px;\n    font-size: 14px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n    background-color: transparent;\n    padding: 5px;\n    outline: none;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:focus {\n      border-color: #2196f3;\n    }\n  }\n  button {\n    padding: 5px 5px;\n    border: none;\n    border-radius: 4px;\n    min-width: 90px;\n    background-color: #2196f3;\n    color: #ffffff;\n    font-family: inherit;\n    font-weight: 500;\n    font-size: 14px;\n    text-align: center;\n    cursor: pointer;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover,\n    &:focus {\n      background-color: #2196f3;\n      color: #ffffff;\n      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1),\n        0px 1px 2px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.12);\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Button, TextField } from '@mui/material';\nimport { Form } from 'components/ContactForm/ContactForm.styled';\nimport { selectContacts } from 'Redux/contacts/selectors';\nimport { addContact } from 'Redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n\n        break;\n      default:\n        throw new Error('There has been a mistake. Try again, please.');\n    }\n  };\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const checkName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (checkName) {\n      toast.error(`${name} is already in your contacts.`);\n\n      return;\n    } else {\n      const newContact = { name, number };\n      dispatch(addContact(newContact));\n      setIsLoading(true);\n    }\n\n    setName('');\n    setNumber('');\n    setIsLoading('');\n  };\n\n  return (\n    <Form onSubmit={onFormSubmit}>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Name\"\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={onFormChange}\n      />\n\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Phone number\"\n        variant=\"outlined\"\n        size=\"small\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={onFormChange}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        size=\"small\"\n        disabled={isLoading}\n      >\n        Add contact\n      </Button>\n      <Toaster />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n  p {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    span {\n      margin-right: 5px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: #1976d2;\n    }\n  }\n`;\n","import { PropTypes } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { IoMdPerson, IoIosBackspace } from 'react-icons/io';\nimport { Button } from '@mui/material';\nimport { deleteContact } from 'Redux/contacts/operations';\nimport { ListItem } from './ContactListItem.styled';\n\nexport const ContactListItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n  const handleDeleteButton = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ListItem>\n      <p>\n        <span>\n          <IoMdPerson />\n        </span>\n        {name}: {phone}\n      </p>\n      <Button\n        type=\"button\"\n        onClick={() => handleDeleteButton(id)}\n        variant=\"outlined\"\n        startIcon={<IoIosBackspace />}\n        size=\"small\"\n      >\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Wrapper } from './ContactList.styled';\nimport {\n  selectContacts,\n  selectFilter,\n  selectVisibleContacts,\n} from 'Redux/contacts/selectors';\nimport { fetchContacts } from 'Redux/contacts/operations';\nimport { ContactListItem } from './ContactListItem/ContactListItem';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      {visibleContacts.length > 0 ? (\n        visibleContacts.map(contact => (\n          <ContactListItem key={contact.id} {...contact} />\n        ))\n      ) : filterValue && contacts ? (\n        <div>Couldn't find any matches.</div>\n      ) : (\n        <div>You don't have any contacts yet.</div>\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 5px;\n  margin-bottom: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { Text, Wrapper } from './Filter.styled';\nimport { setFilter } from 'Redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    const filterValue = e.target.value;\n    dispatch(setFilter(filterValue));\n  };\n  return (\n    <Wrapper>\n      <Text>Find contacts by name</Text>\n      <TextField\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        size=\"small\"\n        onChange={onInputChange}\n      />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 30px auto;\n  padding: 15px 20px;\n  width: 700px;\n  border-radius: 8px;\n`;\n\nexport const Header = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  text-align: center;\n  font-family: 'Montserrat', sans-serif;\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  justify-content: center;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'Redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'Redux/contacts/selectors';\nimport { BarLoader } from 'react-spinners';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Header, Loader } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Header>Phonebook</Header>\n      <ContactForm />\n\n      <Filter />\n      <Header>Contacts</Header>\n\n      {isLoading && !error ? (\n        <Loader>\n          <BarLoader color=\"#2f9e99\" />\n        </Loader>\n      ) : (\n        <ContactList />\n      )}\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterValue","contact","name","toLowerCase","includes","Form","styled","ContactForm","useState","setName","number","setNumber","setIsLoading","useSelector","dispatch","useDispatch","onFormChange","e","target","value","Error","onSubmit","preventDefault","find","toast","newContact","addContact","TextField","id","label","variant","size","type","pattern","title","required","onChange","Button","disabled","Wrapper","ListItem","ContactListItem","phone","onClick","contactId","deleteContact","startIcon","ContactList","visibleContacts","useEffect","fetchContacts","length","map","Text","Filter","setFilter","Container","Header","Loader","Contacts","BarLoader","color"],"sourceRoot":""}